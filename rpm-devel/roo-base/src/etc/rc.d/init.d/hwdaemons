#!/bin/bash
#
# $Id: hwdaemons 5184 2007-03-13 17:52:38Z esammons $
#
#############################################
#
# Copyright (C) <2005> <The Honeynet Project>
#
# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2 of the License, or (at 
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 
# USA
#
#############################################

#
#
# PURPOSE: Manage all of the honeywall related daemons that are
#          dependant on the bridge interfaces, such that the
#          daemons do not die when the bridge gets reset.  This
#          script is not run as part of the normal SVR4-style
#          startup mechanism, as are other scripts.  They are
#          started/stopped as necessary, based on their dependancy
#          order, for normal system reboot/shutdown behavior.
#          The purpose of this script is solely to manage
#          graceful restarts and wholesale start/stop of these
#          daemons when necessary.  Its main use is by hwctl.

. /etc/rc.d/init.d/hwfuncs.sub
. /etc/rc.d/init.d/functions

if [ $(hw_isconfigured) -eq 0 ]; then
    exit 1
fi


# Functions



start () {
   if [ "$(hw_get HwHONEYWALL_RUN)" = "yes" ]; then
      logger -p local0.info "hwdaemons: activating honeywall"
	/etc/init.d/bridge.sh start
	/etc/init.d/hwnetwork start
	/etc/init.d/rc.firewall start
	/etc/init.d/hw-mysqld start
      	/etc/init.d/hw-p0f   start
      	/etc/init.d/hw-pcap  start
      	/etc/init.d/hw-snort_inline start
	/etc/init.d/walleye-httpd start
      	/etc/init.d/hflow      start
	/etc/init.d/swatch.sh  start
	# Catch all for anything else that may need starting.
	/usr/local/bin/hwctl -s
      logger -p local0.info "hwdaemons: honeywall activated"
   fi
}

stop () {
    	logger -p local0.info "hwdaemons: deactivating honeywall"
        /etc/init.d/swatch.sh stop
  	/etc/init.d/hflow      stop
	/etc/init.d/hw-mysqld stop
	/etc/init.d/walleye-httpd stop
    	/etc/init.d/hw-pcap  stop
    	/etc/init.d/hw-snort_inline stop
    	/etc/init.d/hw-p0f   stop
    	/etc/init.d/bridge.sh stop
	/etc/init.d/hwnetwork stop
    	logger -p local0.info "hwdaemons: honeywall deactivated"
}

log_cleanout_start () {
   if [ "$(hw_get HwHONEYWALL_RUN)" = "yes" ]; then
      logger -p local0.info "hwdaemons: activating honeywall post log cleanout"
      	/etc/init.d/hw-p0f   start
      	/etc/init.d/hw-pcap  start
      	/etc/init.d/hw-snort_inline start
      	/etc/init.d/hflow      start
      logger -p local0.info "hwdaemons: honeywall activated"
   fi
}

log_cleanout_stop () {
    	logger -p local0.info "hwdaemons: deactivating honeywall for log cleanout"
    	/etc/init.d/hflow      stop
    	/etc/init.d/hw-pcap  stop
    	/etc/init.d/hw-snort_inline stop
    	/etc/init.d/hw-p0f   stop
    	logger -p local0.info "hwdaemons: honeywall deactivated fro log cleanout"
}

lockdown () {
	logger -p local0.info "hwdaemons: Emergency Lockdown started"
	/etc/init.d/rc.firewall  lockdown
# EWS- Commenting thes out to be consistent with rc.firewall lockdown()
#	/etc/init.d/bridge.sh    stop
#	/etc/init.d/hflowd       stop
#	/etc/init.d/hflow-snort_inline stop
#	/etc/init.d/hflow-snort  stop
#	/etc/init.d/hflow-pcap   stop
#	/etc/init.d/hflow-p0f    stop
#	/etc/init.d/hflow-argus  stop
#	/etc/init.d/sebekd       stop
#	/etc/init.d/rc.firewall  stop
# EWS - End commenting
	logger -p local0.info "hwdaemons: Emergency lockdown complete"
}

# Main body

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    log_cleanout_start)
	log_cleanout_start
	;;
    log_cleanout_stop)
	log_cleanout_stop
	;;
    log_cleanout_restart)
	log_cleanout_stop
	log_cleanout_start
	;;
    lockdown)
	lockdown
	;;
    restart)
        stop
        start
        ;;
    status)
        # Note that we give status of more things that this script
        # normally stops/starts, just to give a more complete picture
        # of the honeywall.
	echo "Honeywall health as of " `date`
	/etc/init.d/hwnetwork status
	/etc/init.d/bridge.sh status
	/etc/init.d/rc.firewall status
	/etc/init.d/hflow      status
	/etc/init.d/hw-snort_inline status
	/etc/init.d/hw-pcap  status
	/etc/init.d/hw-p0f   status
	/etc/init.d/hw-mysqld status
	echo "Related services:"
	/etc/init.d/monit.sh    status
	/etc/init.d/swatch.sh   status
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|log_cleanout_start|log_cleanout_stop"
        echo $"            |log_cleanout_restart|lockdown|status)"
esac

exit 0
